(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{415:function(e,s,t){"use strict";t.r(s);var a=t(52),o=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"ssh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[e._v("#")]),e._v(" SSH")]),e._v(" "),t("p",[e._v("This guide will help you use SSH on Windows to connect to an SSH server. You'll get a similar experience to how SSH works on Linux on MacOS. No PuTTy or GUIs required, and you can even set it up so you don't have to re-type your private key password every time you connect.")]),e._v(" "),t("p",[e._v("This guide assumes you have "),t("RouterLink",{attrs:{to:"/docs/getting-started/Quick-Start.html"}},[e._v("installed Scoop")]),e._v(" and have a Linux machine running an SSH serverâ€”we'll need something to connect to. It also assumes that you're basically familiar with "),t("a",{attrs:{href:"http://en.wikipedia.org/wiki/Secure_Shell",target:"_blank",rel:"noopener noreferrer"}},[e._v("what SSH is all about"),t("OutboundLink")],1),e._v(" and just want to know how to use it on Windows.")],1),e._v(" "),t("h2",{attrs:{id:"install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[e._v("#")]),e._v(" Install")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("If you're using Windows 10 version 1803 (April 2018) or above, a built-in "),t("code",[e._v("win32-openssh")]),e._v(" has been installed in your system and been added to the system PATH. You can run "),t("code",[e._v("scoop which ssh")]),e._v(" to locate the ssh that you're using, and you can chose to skip external OpenSSH installation.")])]),e._v(" "),t("p",[e._v("First, install SSH from a PowerShell prompt:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("scoop install openssh\n")])])]),t("p",[e._v("P.S. if you want to use ssh with git, you may prefer to install "),t("code",[e._v("git-with-openssh")]),e._v(" by "),t("code",[e._v("scoop install git-with-openssh")])]),e._v(" "),t("p",[e._v("Or, for the latest version of OpenSSH:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("scoop install win32-openssh\n")])])]),t("h2",{attrs:{id:"connect-with-ssh-using-a-password"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connect-with-ssh-using-a-password"}},[e._v("#")]),e._v(" Connect with SSH using a password")]),e._v(" "),t("p",[e._v("Say you have a web server running at "),t("code",[e._v("example.org")]),e._v(". You should now be able to connect to it with")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("ssh username@example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("org\n")])])]),t("p",[e._v("Once you enter your password, you should be logged in to the remote server. Pat yourself on the back, you've connected with SSH from Windows! Easy, right?")]),e._v(" "),t("p",[e._v("Passwords are fine, but for extra security we can use a password-protected key instead. Let's set that up now.")]),e._v(" "),t("h2",{attrs:{id:"create-a-key-for-authentication"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-a-key-for-authentication"}},[e._v("#")]),e._v(" Create a key for authentication")]),e._v(" "),t("p",[e._v("If you already have a private key (e.g. "),t("code",[e._v("~/.ssh/id_rsa")]),e._v(") you can skip this step. If not, create a new private key like this (type text is in "),t("strong",[e._v("bold")]),e._v("):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("PS> ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/username//.ssh/id_rsa): <b>[enter]</b>\nEnter passphrase (empty for no passphrase): <b>your-super-secret-password</b>\nEnter same passphrase again: <b>your-super-secret-password</b>\nYour identification has been saved in /c/Users/username//.ssh/id_rsa.\nYour public key has been saved in /c/Users/username//.ssh/id_rsa.pub.\nThe key fingerprint is:\nd5:96:01:96:7a:63:25:93:a0:d6:65:0b:1a:a3:e7:05 username@COMPUTER\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|      E o.=+.    |\n|     . B ==o.o   |\n|    . = o.o++    |\n|     + ...+.     |\n|      . So .     |\n|                 |\n|                 |\n|                 |\n|                 |\n+-----------------+\n")])])]),t("p",[e._v("If you used the default file as above, your private key will be created at "),t("code",[e._v("~/.ssh/id_rsa")]),e._v(" and your public key will be at "),t("code",[e._v("~/.ssh/id_rsa.pub")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"connect-with-an-ssh-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connect-with-an-ssh-key"}},[e._v("#")]),e._v(" Connect with an SSH key")]),e._v(" "),t("p",[e._v("Before we can connect to our server (e.g. "),t("code",[e._v("example.org")]),e._v(") with our SSH key, we need to authorize the key we'll be using by copying our public key to the remote server:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" ~"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ssh/id_rsa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("pub "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),e._v(" ssh username@example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("org "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'mkdir -p ~/.ssh; cat >> ~/.ssh/authorized_keys'")]),e._v("\n")])])]),t("p",[e._v("Now try connecting again:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("ssh username@example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("org\n")])])]),t("p",[e._v("This time, instead of being asked for your "),t("code",[e._v("username")]),e._v(" password, you should be asked for the password for your private key.")]),e._v(" "),t("h2",{attrs:{id:"better-ssh-experience-with-pshazz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#better-ssh-experience-with-pshazz"}},[e._v("#")]),e._v(" Better SSH experience with "),t("code",[e._v("Pshazz")])]),e._v(" "),t("p",[e._v("Now, every time you restart your PC and open a console session you need to start the SSH Agent manually, and every time you connect with "),t("code",[e._v("ssh username@example.org")]),e._v(" you'll be asked for the private key password.")]),e._v(" "),t("p",[e._v("You can use "),t("a",{attrs:{href:"https://github.com/lukesampson/pshazz",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("Pshazz")]),t("OutboundLink")],1),e._v(" to automatically start the SSH Agent and cache your the key passphrase.")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("scoop install pshazz\n")])])]),t("p",[e._v("Then "),t("code",[e._v("Pshazz")]),e._v(" will start the SSH Agent automatically and add your keys. You'll be asked for the key passphrase for the first time. Try connecting over SSH:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("ssh username@example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("org\n")])])]),t("p",[e._v("If everything went according to plan, you should be logged in without needing to enter your password. Hooray!")]),e._v(" "),t("p",[e._v("To see what happened, type:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("ssh-add "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("l\n")])])]),t("p",[e._v("The thumbprint for your SSH key should be shown. "),t("code",[e._v("ssh-agent")]),e._v(" will try using this key whenever you use SSH now.")]),e._v(" "),t("p",[e._v("What's more, "),t("code",[e._v("Pshazz")]),e._v(" support tab completion on "),t("code",[e._v("ssh")]),e._v(" command:")]),e._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[e._v("ssh <TAB>\n")])])]),t("p",[e._v("You will see all hosts in your "),t("code",[e._v("~/.ssh/config")]),e._v(".")]),e._v(" "),t("p",[e._v("You might notice that your SSH sessions are timing out. To prevent this I like to add a ServerAliveInterval to my "),t("code",[e._v("~/.ssh/config")]),e._v(" (you might need to create this file if it doesn't exist):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Host *\n    ServerAliveInterval 30\n")])])]),t("p",[e._v("This will send a null packet to the remote server every 30 seconds to keep the connection alive.")])])}),[],!1,null,null,null);s.default=o.exports}}]);